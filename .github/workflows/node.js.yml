name: Node.js CI

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: admin
          MONGO_INITDB_DATABASE: APP-DATABASE
        ports:
          - 27017:27017
      container:
        image: composer:latest

    strategy:
      matrix:
        node-version: ['20.x']

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependancies
        run: npm install

      - name: Install mongosh
        run: |
          sudo apt-get install gnupg
          wget -qO- https://www.mongodb.org/static/pgp/server-7.0.asc | sudo tee /etc/apt/trusted.gpg.d/server-7.0.asc
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh
          mongosh --version

      - name: Initalize MongoDB
        run: |
          mongosh --host localhost:27017 -u admin -p admin --authenticationDatabase admin <<EOF
            db = db.getSiblingDB('APP-DB');
            db.createUser({ user: 'APP-USERNAME', pwd: 'APP-PASSWORD', roles: [{ role: 'readWrite', db: 'APP-DB' }] })
            db.createCollection('APP-COLLECTION');
            EOF

      - name: Build
        run: npm run build

      - name: Fix lint
        run: npm run lint:fix

      - name: Test and coverage
        run: npm run coverage

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
